// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: SequentialCommandGroup.

package frc.robot.commands;
import org.ejml.dense.block.MatrixOps_DDRB;

import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import frc.robot.Constants;
import frc.robot.subsystems.Conveyor;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.DriveTrain;
import frc.robot.subsystems.FeederSystemBack;
import frc.robot.subsystems.FeederSystemFront;
import frc.robot.subsystems.FrontIntakeArmSub;
import frc.robot.subsystems.Imu;
import frc.robot.subsystems.IntakeFront;
import frc.robot.subsystems.IntakeBack;
import frc.robot.subsystems.IntakeFrontArm;
import frc.robot.subsystems.ShooterDrive;
import frc.robot.subsystems.Sorter;
import frc.robot.subsystems.BeanBreakBack;
import frc.robot.subsystems.BeanBreakFront;
import frc.robot.subsystems.BeanBreakMid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class SequentialCommandGroup3ball extends SequentialCommandGroup {

    final double InitialShotSpeed = 7500; //7500
    final double SecondShotSpeed = 8300;  //10000
    final double secondBallHeading = 100;
    final double thirdBallHeading = 24;
    final boolean oneballshot = false;
    final boolean twoballshot = true;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    public SequentialCommandGroup3ball(DriveTrain driveTrain, FrontIntakeArmSub frontarm, 
                                     ShooterDrive shoot, Sorter sort, IntakeFront intakeFront,
                                    Conveyor conveyor, FeederSystemFront feederfront, BeanBreakMid beanBreakMid,
                                    BeanBreakBack beanBreakBack, BeanBreakFront beanBreakFront  )
    {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    addCommands(
        // Add Commands here:
        // Also add parallel commands using the
        //
        // addCommands(
        //      new command1(argsN, subsystem),
        //      parallel(
        //          new command2(argsN, subsystem),
        //          new command3(argsN, subsystem)
        //      )    
     
        //  );
        //enabled intake suck in ball stop when ball is received
/*
        new ResetYawCommand(driveTrain),
        //turn desired angle
       new TurnAnglePID_IMU(driveTrain, 10)
      // new TurnAnglePID_IMU(driveTrain, thirdBallHeading)
  */   
      //drive desired distance
      //new DriveDistance(driveTrain, 0.8, 15)
       //    new ResetYawCommand(driveTrain),
           //new TurnAnglePID_IMU(driveTrain, 90)
       //new DriveDistance(driveTrain, 0.8, 15)



    /*
        new ResetYawCommand(driveTrain),
        new TurnAnglePID_IMU(driveTrain, secondBallHeading),
        new TurnAnglePID_IMU(driveTrain, thirdBallHeading)
*/
        
        new ResetYawCommand(driveTrain),
        //drive back take two shots
        parallel(
           new IntakeFromFront(shoot,intakeFront,conveyor,
              feederfront,sort,frontarm,beanBreakMid,beanBreakBack,beanBreakFront, true),

           new HeadingDrive(driveTrain, 1, 3.1, 0)
                ),

        new TakeSpeedShot(beanBreakMid, beanBreakFront, conveyor, shoot, feederfront, SecondShotSpeed, twoballshot),
        //drive back take two shots 

        //turns to 3rd ball and goes to grab it
        //new TurnAnglePID_IMU(driveTrain, secondBallHeading),
        new FtcGryoTurn(driveTrain, 1, secondBallHeading),
        
        parallel(
            new IntakeFromFront(shoot,intakeFront,conveyor,
               feederfront,sort,frontarm,beanBreakMid,beanBreakBack,beanBreakFront, false),
 
            new HeadingDrive(driveTrain, 1, 9, secondBallHeading)
                 ),

        //turns to 3rd ball and goes to grab it


        new HeadingDrive(driveTrain, 1, -6, secondBallHeading),

      //  new TurnAnglePID_IMU(driveTrain, thirdBallHeading),
        new FtcGryoTurn(driveTrain, 1, thirdBallHeading),
            
        new TakeSpeedShot(beanBreakMid, beanBreakFront, conveyor, shoot, feederfront, SecondShotSpeed, oneballshot),

        new HeadingDrive(driveTrain, 1, 5, thirdBallHeading)
      

        );
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
